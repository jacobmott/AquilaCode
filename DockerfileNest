
# Stage 1: Build with node image with NX
#Get node image
#copy entire cwd for nx app over
#npm install
#npm install nx globally
#nx build nest-app --prod
#expose port 3000

# Stage 2: deploy/run with node
#Get an node image
#copy the dist folder from the nx build over to the nginx image
#expose port 80
#run node


# Stage 1: build with node
#Get node image
FROM node:22-alpine3.20 AS development

#copy entire cwd for nx app over
COPY . ./AquilaCode/

WORKDIR /AquilaCode/

#npm install
RUN npm install --no-audit

# Install NX build system
#npm install nx globally
RUN npm i -g nx

#Build the nest app
RUN nx build nest-app --prod

# Stage 2: deploy/run with node
#Get an node image
FROM node:22-alpine3.20 AS production

#Update apk database indexes from all configured packages. Run:
RUN apk update
#Apply all pending security updates on Alpine Linux, type:
RUN apk upgrade
#Search for curl packages under Alpine:
# RUN apk search curl
# RUN apk add curl
RUN apk add bash

#copy the dist folder from the nx build over to the node image
COPY --from=development /AquilaCode/dist/nest-app/ /AquilaCode/
COPY --from=development /AquilaCode/package.json /AquilaCode/
COPY --from=development /AquilaCode/package-lock.json /AquilaCode/

WORKDIR /AquilaCode

RUN npm install --no-audit
# RUN curl -sL https://downloads.mongodb.com/compass/mongosh-2.3.0-linux-x64.tgz| tar xz
#We use forever to startup the API/node process and keep it running 
#"forever" so the container doesn't exit when the node process dies
#We also install mongosh so we can debug any database connection issues
RUN npm i -g forever
RUN npm i -g mongosh
#expose port 80
#EXPOSE 80
#expose port 3000
#EXPOSE 3000

#run nginx
#ENTRYPOINT ["tail", "-f", "/dev/null"]
#Switching to forever so if the node process crashes forever will keep it up 
#and the container wont go down, which will allow us to get on the container and debug the crash/issue
CMD ["forever", "-l", "mainout.log", "-o", "out.log", "-e", "err.log", "main.js"]
# CMD ["node", "main.js"]
#CMD ["nginx", "-g", "daemon off;"]