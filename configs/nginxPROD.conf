#https://www.digitalocean.com/community/tutorials/nginx-location-directive
#https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms
#https://www.google.com/search?q=nginx+how+to+remove+parts+of+the+uri+after+a+location+match&rlz=1C1QMKX_enUS1054US1054&oq=nginx+how+to+remove+parts+of+the+uri+after+a+location+match&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIJCAEQIRgKGKAB0gEJMTIwODNqMGoxqAIAsAIA&sourceid=chrome&ie=UTF-8
server {
    listen       80;
    listen  [::]:80;
    server_name  frontend;

    #AWS Load Balancer handles ssl for us 
    #listen 443 ssl;
    ## force https-redirects
    #if ($scheme = http) {
    #  return 301 https://$server_name$request_uri;
    #}

    #access_log  /var/log/nginx/host.access.log  main;

    location /backend/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass_request_headers on;   
        proxy_pass http://api:3000/;
    }

    #redirect to nest app'
    # location /backend/ {
    #     #Remove backend from the path before we forward on to the nest backend
    #     # rewrite ^/backend/(.*)$ /$1 break;
    #     proxy_pass http://api:3000/;
    #     proxy_http_version  1.1;
    #     proxy_set_header    Upgrade $http_upgrade;
    #     proxy_set_header    Connection keep-alive;
    #     proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header    X-Forwarded-Proto $scheme;
    #     proxy_pass_request_headers on;
    #     proxy_intercept_errors on;  # the most important directive, make it on;
    #     error_page  502 = @502; # redefine 502 error page
    # }

    # location @502 {
    #   return 502 $upstream_addr\n;  # you could return anything you want.
    # }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # rewrite home / permanent;

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }




    

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

